{"id":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","dependencies":[{"name":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/package.json","includedInParent":true,"mtime":1598549591973},{"name":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1596557030676},{"name":"depd","loc":{"line":7,"column":39},"parent":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/node_modules/depd/lib/browser/index.js"},{"name":"./provider","loc":{"line":8,"column":27},"parent":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/providers/provider.js"},{"name":"../utils/web","loc":{"line":9,"column":22},"parent":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/utils/web.js"},{"name":"../utils/errors","loc":{"line":10,"column":25},"parent":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/utils/errors.js"},{"name":"../utils/serialize","loc":{"line":12,"column":28},"parent":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/utils/serialize.js"},{"name":"../utils/rpc_errors","loc":{"line":13,"column":29},"parent":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/utils/rpc_errors.js"},{"name":"buffer","parent":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/doriancrutcher/Documents/Aug to Sept NEAR Stuff /Software Dev/Near/voting/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = exports.TypedError = void 0;\nconst depd_1 = __importDefault(require(\"depd\"));\nconst provider_1 = require(\"./provider\");\nconst web_1 = require(\"../utils/web\");\nconst errors_1 = require(\"../utils/errors\");\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return errors_1.TypedError; } });\nconst serialize_1 = require(\"../utils/serialize\");\nconst rpc_errors_1 = require(\"../utils/rpc_errors\");\n/// Keep ids unique across all connections.\nlet _nextId = 123;\nclass JsonRpcProvider extends provider_1.Provider {\n    constructor(url) {\n        super();\n        this.connection = { url };\n    }\n    /**\n     * Get the current network (ex. test, beta, etcâ€¦)\n     * @returns {Promise<Network>}\n     */\n    async getNetwork() {\n        return {\n            name: 'test',\n            chainId: 'test'\n        };\n    }\n    /**\n     * Gets the RPC's status\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @returns {Promise<NodeStatusResult>}\n     */\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#send-transaction-wait-until-done)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransaction(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]).then(provider_1.adaptTransactionResult);\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatus(txHash, accountId) {\n        return this.sendJsonRpc('tx', [serialize_1.base_encode(txHash), accountId]).then(provider_1.adaptTransactionResult);\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.nearprotocol.com/docs/interaction/rpc#query)\n     * @param path Path parameter for the RPC (ex. \"contract/my_token\")\n     * @param data Data parameter (ex. \"\", \"AQ4\", or whatever is needed)\n     */\n    async query(path, data) {\n        const result = await this.sendJsonRpc('query', [path, data]);\n        if (result && result.error) {\n            throw new Error(`Querying ${path} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`);\n        }\n        return result;\n    }\n    /**\n     * Query for block info from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#block)\n     */\n    async block(blockQuery) {\n        const { finality } = blockQuery;\n        let { blockId } = blockQuery;\n        if (typeof blockQuery !== 'object') {\n            const deprecate = depd_1.default('JsonRpcProvider.block(blockId)');\n            deprecate('use `block({ blockId })` or `block({ finality })` instead');\n            blockId = blockQuery;\n        }\n        return this.sendJsonRpc('block', { block_id: blockId, finality });\n    }\n    /**\n     * Queries for details of a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#chunk)\n     * @param chunkId Hash of a chunk ID or shard ID\n     * @returns {Promise<ChunkResult>}\n     */\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    /**\n     * Query validators of the epoch defined by given block id.\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#validators)\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.sendJsonRpc('validators', [blockId]);\n    }\n    /**\n     * Gets EXPERIMENTAL_genesis_config from RPC\n     * @returns {Promise<GenesisConfig>}\n     */\n    async experimental_genesisConfig() {\n        return await this.sendJsonRpc('EXPERIMENTAL_genesis_config', []);\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     * @deprecated Use `lightClientProof` instead\n     */\n    async experimental_lightClientProof(request) {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_lightClientProof(request)');\n        deprecate('use `lightClientProof` instead');\n        return await this.lightClientProof(request);\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     */\n    async lightClientProof(request) {\n        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    async sendJsonRpc(method, params) {\n        const request = {\n            method,\n            params,\n            id: (_nextId++),\n            jsonrpc: '2.0'\n        };\n        const response = await web_1.fetchJson(this.connection, JSON.stringify(request));\n        if (response.error) {\n            if (typeof response.error.data === 'object') {\n                if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                    // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                    throw new errors_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                }\n                else {\n                    throw rpc_errors_1.parseRpcError(response.error.data);\n                }\n            }\n            else {\n                const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                // NOTE: All this hackery is happening because structured errors not implemented\n                // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                if (response.error.data === 'Timeout') {\n                    throw new errors_1.TypedError('send_tx_commit has timed out.', 'TimeoutError');\n                }\n                else {\n                    throw new errors_1.TypedError(errorMessage);\n                }\n            }\n        }\n        return response.result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}}],"sources":{"../node_modules/near-api-js/lib/providers/json-rpc-provider.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = exports.TypedError = void 0;\nconst depd_1 = __importDefault(require(\"depd\"));\nconst provider_1 = require(\"./provider\");\nconst web_1 = require(\"../utils/web\");\nconst errors_1 = require(\"../utils/errors\");\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return errors_1.TypedError; } });\nconst serialize_1 = require(\"../utils/serialize\");\nconst rpc_errors_1 = require(\"../utils/rpc_errors\");\n/// Keep ids unique across all connections.\nlet _nextId = 123;\nclass JsonRpcProvider extends provider_1.Provider {\n    constructor(url) {\n        super();\n        this.connection = { url };\n    }\n    /**\n     * Get the current network (ex. test, beta, etcâ€¦)\n     * @returns {Promise<Network>}\n     */\n    async getNetwork() {\n        return {\n            name: 'test',\n            chainId: 'test'\n        };\n    }\n    /**\n     * Gets the RPC's status\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @returns {Promise<NodeStatusResult>}\n     */\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#send-transaction-wait-until-done)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransaction(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]).then(provider_1.adaptTransactionResult);\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatus(txHash, accountId) {\n        return this.sendJsonRpc('tx', [serialize_1.base_encode(txHash), accountId]).then(provider_1.adaptTransactionResult);\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.nearprotocol.com/docs/interaction/rpc#query)\n     * @param path Path parameter for the RPC (ex. \"contract/my_token\")\n     * @param data Data parameter (ex. \"\", \"AQ4\", or whatever is needed)\n     */\n    async query(path, data) {\n        const result = await this.sendJsonRpc('query', [path, data]);\n        if (result && result.error) {\n            throw new Error(`Querying ${path} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`);\n        }\n        return result;\n    }\n    /**\n     * Query for block info from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#block)\n     */\n    async block(blockQuery) {\n        const { finality } = blockQuery;\n        let { blockId } = blockQuery;\n        if (typeof blockQuery !== 'object') {\n            const deprecate = depd_1.default('JsonRpcProvider.block(blockId)');\n            deprecate('use `block({ blockId })` or `block({ finality })` instead');\n            blockId = blockQuery;\n        }\n        return this.sendJsonRpc('block', { block_id: blockId, finality });\n    }\n    /**\n     * Queries for details of a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#chunk)\n     * @param chunkId Hash of a chunk ID or shard ID\n     * @returns {Promise<ChunkResult>}\n     */\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    /**\n     * Query validators of the epoch defined by given block id.\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#validators)\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.sendJsonRpc('validators', [blockId]);\n    }\n    /**\n     * Gets EXPERIMENTAL_genesis_config from RPC\n     * @returns {Promise<GenesisConfig>}\n     */\n    async experimental_genesisConfig() {\n        return await this.sendJsonRpc('EXPERIMENTAL_genesis_config', []);\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     * @deprecated Use `lightClientProof` instead\n     */\n    async experimental_lightClientProof(request) {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_lightClientProof(request)');\n        deprecate('use `lightClientProof` instead');\n        return await this.lightClientProof(request);\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     */\n    async lightClientProof(request) {\n        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    async sendJsonRpc(method, params) {\n        const request = {\n            method,\n            params,\n            id: (_nextId++),\n            jsonrpc: '2.0'\n        };\n        const response = await web_1.fetchJson(this.connection, JSON.stringify(request));\n        if (response.error) {\n            if (typeof response.error.data === 'object') {\n                if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                    // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                    throw new errors_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                }\n                else {\n                    throw rpc_errors_1.parseRpcError(response.error.data);\n                }\n            }\n            else {\n                const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                // NOTE: All this hackery is happening because structured errors not implemented\n                // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                if (response.error.data === 'Timeout') {\n                    throw new errors_1.TypedError('send_tx_commit has timed out.', 'TimeoutError');\n                }\n                else {\n                    throw new errors_1.TypedError(errorMessage);\n                }\n            }\n        }\n        return response.result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n"},"lineCount":166}},"error":null,"hash":"054825110083d569edda4c8448f2354f","cacheData":{"env":{}}}